{"version":3,"sources":["redux/reducers/authedUser.js","redux/reducers/tweets.js","redux/reducers/users.js","redux/reducers/index.js","redux/middleware/logger.js","redux/middleware/index.js","redux/store.js","utils/_DATA.js","utils/api.js","redux/actions/types.js","redux/actions/tweets.js","utils/helpers.js","redux/selectors.js","components/container/Tweet.js","components/container/Dashboard.js","components/presentation/TweetReplies.js","components/container/TweetForm.js","components/container/TweetPage.js","components/presentation/Nav.js","components/container/App.js","redux/actions/shared.js","redux/actions/users.js","redux/actions/authedUser.js","reportWebVitals.js","index.js"],"names":["authedUser","state","action","SET_AUTHED_USER","id","type","tweets","hasLiked","tweet","likes","tweetID","replyingTo","replies","ADD_TWEET","RECEIVE_TWEETS","TOGGLE_TWEET","filter","uid","users","RECEIVE_USERS","combineReducers","loadingBar","loadingBarReducer","logger","store","next","console","group","log","returnValue","getState","groupEnd","applyMiddleware","thunk","createStore","reducers","middleware","sarah_edo","name","avatarURL","tylermcginnis","dan_abramov","text","author","timestamp","_saveTweet","Promise","res","rej","formattedTweet","Math","random","toString","substring","Date","now","formatTweet","setTimeout","concat","saveLikeToggle","info","_saveLikeToggle","toggleTweet","formatDate","d","time","toLocaleTimeString","substr","slice","toLocaleDateString","getLoading","getTweetIDs","Object","keys","sort","a","b","getTweet","getFormattedTweet","parentTweet","avatar","length","includes","parent","getParentTweet","getTweetReplies","Tweet","handleLike","e","preventDefault","props","handleToggleTweet","toParent","history","push","this","to","className","src","alt","onClick","color","Component","withRouter","connect","dispatch","catch","warn","alert","tweetIDs","map","ID","TweetReplies","replyID","TweetForm","toHome","handleChange","setState","target","value","handleSubmit","handleAddTweet","tweetLeftColor","tweetLeft","render","onSubmit","place","onChange","maxLength","style","disabled","showLoading","then","addTweet","hideLoading","match","params","Nav","exact","activeClassName","App","componentDidMount","handleInitialData","basename","loading","path","component","Dashboard","TweetPage","all","receiveTweets","receiveUsers","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.9a304f0b.chunk.js","sourcesContent":["/**\n * Reducer function for authedUser\n * @param {id} state - current authedUser state\n * @param {action} action - Redux action\n * @return {id} - authedUser state\n */\nconst authedUser = (state = null, action) =>\n  ({SET_AUTHED_USER: action.id}[action.type] || state);\n\n// Export authedUser reducer\nexport default authedUser;\n","/**\n * Reducer function for tweets\n * @param {tweets} state - current tweets state\n * @param {action} action - Redux action\n * @return {tweets} - tweets state\n */\nconst tweets = (\n    state = {},\n    {authedUser, hasLiked, id, tweet, tweets, type},\n) => {\n  /**\n   * @const\n   * @type {id[]}\n   */\n  const likes = state[id] ? state[id].likes : [];\n\n  /**\n   * @const\n   * @type {string}\n   */\n  const tweetID = tweet ? tweet.id : '';\n\n  /**\n   * @const\n   * @type {object}\n   */\n  let replyingTo = {};\n\n  if (tweetID && tweet.replyingTo) {\n    replyingTo = {\n      [tweet.replyingTo]: {\n        ...state[tweet.replyingTo],\n        replies: [...state[tweet.replyingTo].replies, tweetID],\n      },\n    };\n  }\n\n  return (\n    {\n      ADD_TWEET: {...state, [tweetID]: tweet, ...replyingTo},\n      RECEIVE_TWEETS: {...state, ...tweets},\n      TOGGLE_TWEET: {\n        ...state,\n        [id]: {\n          ...state[id],\n          likes: hasLiked ?\n            likes.filter((uid) => uid !== authedUser) :\n            [...likes, authedUser],\n        },\n      },\n    }[type] || state\n  );\n};\n\n// Export tweets reducer\nexport default tweets;\n","/**\n * Reducer function for users\n * @param {users} state - current users state\n * @param {action} action - Redux action\n * @return {users} - users state\n */\nconst users = (state = {}, action) =>\n  ({RECEIVE_USERS: {...state, ...action.users}}[action.type] || state);\n\n// Export users reducer\nexport default users;\n","// Module imports\nimport {combineReducers} from 'redux';\n\n// Reducer imports\nimport authedUser from 'redux/reducers/authedUser';\nimport {loadingBarReducer} from 'react-redux-loading';\nimport tweets from 'redux/reducers/tweets';\nimport users from 'redux/reducers/users';\n\n// Export combineReducers\nexport default combineReducers({\n  authedUser,\n  loadingBar: loadingBarReducer,\n  tweets,\n  users,\n});\n","/**\n * Logger middleware\n * @param {store} store - Redux store object\n * @return {function}\n */\nconst logger = (store) => (next) => (action) => {\n  console.group(action.type);\n  console.log('The action: ', action);\n  const returnValue = next(action);\n  console.log('The new state: ', store.getState());\n  console.groupEnd();\n\n  return returnValue;\n};\n\n\n// Logger export\nexport default logger;\n","// Module imports\nimport {applyMiddleware} from 'redux';\nimport thunk from 'redux-thunk';\n\n// Middleware imports\nimport logger from 'redux/middleware/logger';\n\n// Export middlewares\nexport default applyMiddleware(thunk, logger );\n","// /Module imports\nimport {createStore} from 'redux';\n\n// Reducers import\nimport reducers from 'redux/reducers';\nimport middleware from 'redux/middleware';\n\n/**\n * Redux store\n * @const {store}\n */\nconst store = createStore(reducers, middleware );\n\n// Store export\nexport default store;\n","let users = {\r\n  sarah_edo: {\r\n    id: 'sarah_edo',\r\n    name: 'Sarah Drasner',\r\n    avatarURL: 'https://tylermcginnis.com/would-you-rather/sarah.jpg',\r\n    tweets: ['8xf0y6ziyjabvozdd253nd', 'hbsc73kzqi75rg7v1e0i6a', '2mb6re13q842wu8n106bhk', '6h5ims9iks66d4m7kqizmv', '3sklxkf9yyfowrf0o1ftbb'],\r\n  },\r\n  tylermcginnis: {\r\n    id: 'tylermcginnis',\r\n    name: 'Tyler McGinnis',\r\n    avatarURL: 'https://tylermcginnis.com/would-you-rather/tyler.jpg',\r\n    tweets: ['5c9qojr2d1738zlx09afby', 'f4xzgapq7mu783k9t02ghx', 'nnvkjqoevs8t02lzcc0ky', '4pt0px8l0l9g6y69ylivti', 'fap8sdxppna8oabnxljzcv', 'leqp4lzfox7cqvsgdj0e7', '26p5pskqi88i58qmza2gid', 'xi3ca2jcfvpa0i3t4m7ag'],\r\n  },\r\n  dan_abramov: {\r\n    id: 'dan_abramov',\r\n    name: 'Dan Abramov',\r\n    avatarURL: 'https://tylermcginnis.com/would-you-rather/dan.jpg',\r\n    tweets: ['5w6k1n34dkp1x29cuzn2zn', 'czpa59mg577x1oo45cup0d', 'omdbjl68fxact38hk7ypy6', '3km0v4hf1ps92ajf4z2ytg', 'njv20mq7jsxa6bgsqc97', 'sfljgka8pfddbcer8nuxv', 'r0xu2v1qrxa6ygtvf2rkjw'],\r\n  },\r\n};\r\n\r\nlet tweets = {\r\n  '8xf0y6ziyjabvozdd253nd': {\r\n    id: '8xf0y6ziyjabvozdd253nd',\r\n    text: 'Shoutout to all the speakers I know for whom English is not a first language, but can STILL explain a concept well. It\\'s hard enough to give a good talk in your mother tongue!',\r\n    author: 'sarah_edo',\r\n    timestamp: 1518122597860,\r\n    likes: ['tylermcginnis'],\r\n    replies: ['fap8sdxppna8oabnxljzcv', '3km0v4hf1ps92ajf4z2ytg'],\r\n    replyingTo: null,\r\n  },\r\n  '5c9qojr2d1738zlx09afby': {\r\n    id: '5c9qojr2d1738zlx09afby',\r\n    text: 'I hope one day the propTypes pendulum swings back. Such a simple yet effective API. Was one of my favorite parts of React.',\r\n    author: 'tylermcginnis',\r\n    timestamp: 1518043995650,\r\n    likes: ['sarah_edo', 'dan_abramov'],\r\n    replies: ['njv20mq7jsxa6bgsqc97'],\r\n    replyingTo: null,\r\n  },\r\n  'f4xzgapq7mu783k9t02ghx': {\r\n    id: 'f4xzgapq7mu783k9t02ghx',\r\n    text: 'Want to work at Facebook/Google/:BigCompany? Start contributing code long before you ever interview there.',\r\n    author: 'tylermcginnis',\r\n    timestamp: 1517043995650,\r\n    likes: ['dan_abramov'],\r\n    replies: [],\r\n    replyingTo: null,\r\n  },\r\n  'hbsc73kzqi75rg7v1e0i6a': {\r\n    id: 'hbsc73kzqi75rg7v1e0i6a',\r\n    text: 'Puppies 101: buy a hamper with a lid on it.',\r\n    author: 'sarah_edo',\r\n    timestamp: 1516043995650,\r\n    likes: ['tylermcginnis'],\r\n    replies: ['leqp4lzfox7cqvsgdj0e7', 'sfljgka8pfddbcer8nuxv'],\r\n    replyingTo: null,\r\n  },\r\n  '5w6k1n34dkp1x29cuzn2zn': {\r\n    id: '5w6k1n34dkp1x29cuzn2zn',\r\n    text: 'Is there a metric like code coverage, but that shows lines that, if changed (in a syntactically correct way), wouldn’t cause tests to fail?',\r\n    author: 'dan_abramov',\r\n    timestamp: 1515043995650,\r\n    likes: ['sarah_edo'],\r\n    replies: [],\r\n    replyingTo: null,\r\n  },\r\n  'czpa59mg577x1oo45cup0d': {\r\n    id: 'czpa59mg577x1oo45cup0d',\r\n    text: 'React came out \\'rethinking best practices\\'. It has since accumulated \\'best practices\\' of its own. Let’s see if we can do better.',\r\n    author: 'dan_abramov',\r\n    timestamp: 1515043995650,\r\n    likes: ['tylermcginnis', 'sarah_edo'],\r\n    replies: ['3sklxkf9yyfowrf0o1ftbb'],\r\n    replyingTo: null,\r\n  },\r\n  '2mb6re13q842wu8n106bhk': {\r\n    id: '2mb6re13q842wu8n106bhk',\r\n    text: 'I think I realized I like dogs so much because I can really relate to being motivated by snacks',\r\n    author: 'sarah_edo',\r\n    timestamp: 1514043995650,\r\n    likes: ['dan_abramov'],\r\n    replies: ['26p5pskqi88i58qmza2gid'],\r\n    replyingTo: null,\r\n  },\r\n  'nnvkjqoevs8t02lzcc0ky': {\r\n    id: 'nnvkjqoevs8t02lzcc0ky',\r\n    text: 'Maybe the real benefit of open source was the friendships we made along the way?',\r\n    author: 'tylermcginnis',\r\n    timestamp: 1513043995650,\r\n    likes: [],\r\n    replies: [],\r\n    replyingTo: null,\r\n  },\r\n  'omdbjl68fxact38hk7ypy6': {\r\n    id: 'omdbjl68fxact38hk7ypy6',\r\n    text: 'A 7-minute Paul Joseph Watson video being translated and aired by a Russian state TV channel is the most surreal thing I’ve seen in 2018 yet',\r\n    author: 'dan_abramov',\r\n    timestamp: 1512043995650,\r\n    likes: [],\r\n    replies: [],\r\n    replyingTo: null,\r\n  },\r\n  '4pt0px8l0l9g6y69ylivti': {\r\n    id: '4pt0px8l0l9g6y69ylivti',\r\n    text: 'Talking less about the downsides of OSS and focusing on some of the huge potential upsides for once might just help get more people into it.',\r\n    author: 'tylermcginnis',\r\n    timestamp: 1511043995650,\r\n    likes: ['dan_abramov'],\r\n    replies: [],\r\n    replyingTo: null,\r\n  },\r\n  '6h5ims9iks66d4m7kqizmv': {\r\n    id: '6h5ims9iks66d4m7kqizmv',\r\n    text: 'By the way, if you have a blog post sitting around and want to get some eyes on it, we take guest submissions! That\\'s how I started.',\r\n    author: 'sarah_edo',\r\n    timestamp: 1510043995650,\r\n    likes: ['dan_abramov', 'tylermcginnis'],\r\n    replies: ['xi3ca2jcfvpa0i3t4m7ag', 'r0xu2v1qrxa6ygtvf2rkjw'],\r\n    replyingTo: null,\r\n  },\r\n  'fap8sdxppna8oabnxljzcv': {\r\n    id: 'fap8sdxppna8oabnxljzcv',\r\n    author: 'tylermcginnis',\r\n    text: 'I agree. I\\'m always really impressed when I see someone giving a talk in a language that\\'s not their own.',\r\n    timestamp: 1518122677860,\r\n    likes: ['sarah_edo'],\r\n    replyingTo: '8xf0y6ziyjabvozdd253nd',\r\n    replies: [],\r\n  },\r\n  '3km0v4hf1ps92ajf4z2ytg': {\r\n    id: '3km0v4hf1ps92ajf4z2ytg',\r\n    author: 'dan_abramov',\r\n    text: 'It can be difficult at times.',\r\n    timestamp: 1518122667860,\r\n    likes: [],\r\n    replyingTo: '8xf0y6ziyjabvozdd253nd',\r\n    replies: [],\r\n  },\r\n  'njv20mq7jsxa6bgsqc97': {\r\n    id: 'njv20mq7jsxa6bgsqc97',\r\n    author: 'dan_abramov',\r\n    text: 'Sometimes you have to sacrifice simplicity for power.',\r\n    timestamp: 1518044095650,\r\n    likes: ['tylermcginnis'],\r\n    replyingTo: '5c9qojr2d1738zlx09afby',\r\n    replies: [],\r\n  },\r\n  'leqp4lzfox7cqvsgdj0e7': {\r\n    id: 'leqp4lzfox7cqvsgdj0e7',\r\n    author: 'tylermcginnis',\r\n    text: 'Also trashcans. Learned this the hard way.',\r\n    timestamp: 1516043255650,\r\n    likes: [],\r\n    replyingTo: 'hbsc73kzqi75rg7v1e0i6a',\r\n    replies: [],\r\n  },\r\n  'sfljgka8pfddbcer8nuxv': {\r\n    id: 'sfljgka8pfddbcer8nuxv',\r\n    author: 'dan_abramov',\r\n    text: 'Puppies are the best.',\r\n    timestamp: 1516045995650,\r\n    likes: ['sarah_edo', 'tylermcginnis'],\r\n    replyingTo: 'hbsc73kzqi75rg7v1e0i6a',\r\n    replies: [],\r\n  },\r\n  '3sklxkf9yyfowrf0o1ftbb': {\r\n    id: '3sklxkf9yyfowrf0o1ftbb',\r\n    author: 'sarah_edo',\r\n    text: 'The idea of best practices being a negative thing is an interesting concept.',\r\n    timestamp: 1515044095650,\r\n    likes: ['dan_abramov'],\r\n    replyingTo: 'czpa59mg577x1oo45cup0d',\r\n    replies: [],\r\n  },\r\n  '26p5pskqi88i58qmza2gid': {\r\n    id: '26p5pskqi88i58qmza2gid',\r\n    author: 'tylermcginnis',\r\n    text: 'Too relatable',\r\n    timestamp: 1514044994650,\r\n    likes: ['sarah_edo'],\r\n    replyingTo: '2mb6re13q842wu8n106bhk',\r\n    replies: [],\r\n  },\r\n  'xi3ca2jcfvpa0i3t4m7ag': {\r\n    id: 'xi3ca2jcfvpa0i3t4m7ag',\r\n    author: 'tylermcginnis',\r\n    text: 'Just DMd you!',\r\n    timestamp: 1510043995650,\r\n    likes: [],\r\n    replyingTo: '6h5ims9iks66d4m7kqizmv',\r\n    replies: [],\r\n  },\r\n  'r0xu2v1qrxa6ygtvf2rkjw': {\r\n    id: 'r0xu2v1qrxa6ygtvf2rkjw',\r\n    author: 'dan_abramov',\r\n    text: 'This is a great idea.',\r\n    timestamp: 1510044395650,\r\n    likes: ['tylermcginnis'],\r\n    replyingTo: '6h5ims9iks66d4m7kqizmv',\r\n    replies: [],\r\n  },\r\n};\r\n\r\nexport function _getUsers() {\r\n  return new Promise((res, rej) => {\r\n    setTimeout(() => res({...users}), 1000);\r\n  });\r\n}\r\n\r\nexport function _getTweets() {\r\n  return new Promise((res, rej) => {\r\n    setTimeout(() => res({...tweets}), 1000);\r\n  });\r\n}\r\n\r\nexport function _saveLikeToggle({id, hasLiked, authedUser}) {\r\n  return new Promise((res, rej) => {\r\n    setTimeout(() => {\r\n      tweets = {\r\n        ...tweets,\r\n        [id]: {\r\n          ...tweets[id],\r\n          likes: hasLiked === true ?\r\n            tweets[id].likes.filter((uid) => uid !== authedUser) :\r\n            tweets[id].likes.concat([authedUser]),\r\n        },\r\n      };\r\n\r\n      res();\r\n    }, 500);\r\n  });\r\n}\r\n\r\nfunction generateUID() {\r\n  return Math.random().toString(36).substring(2, 15) + Math.random().toString(36).substring(2, 15);\r\n}\r\n\r\nfunction formatTweet({author, text, replyingTo = null}) {\r\n  return {\r\n    author,\r\n    id: generateUID(),\r\n    likes: [],\r\n    replies: [],\r\n    text,\r\n    timestamp: Date.now(),\r\n    replyingTo,\r\n  };\r\n}\r\n\r\nexport function _saveTweet({text, author, replyingTo}) {\r\n  return new Promise((res, rej) => {\r\n    const formattedTweet = formatTweet({\r\n      text,\r\n      author,\r\n      replyingTo,\r\n    });\r\n\r\n    setTimeout(() => {\r\n      tweets = {\r\n        ...tweets,\r\n        [formattedTweet.id]: formattedTweet,\r\n      };\r\n\r\n      users = {\r\n        ...users,\r\n        [author]: {\r\n          ...users[author],\r\n          tweets: users[author].tweets.concat([formattedTweet.id]),\r\n        },\r\n      };\r\n\r\n      res(formattedTweet);\r\n    }, 1000);\r\n  });\r\n}\r\n","import {\r\n  _getUsers,\r\n  _getTweets,\r\n  _saveLikeToggle,\r\n  _saveTweet,\r\n} from './_DATA.js';\r\n\r\nexport function getInitialData() {\r\n  return Promise.all([\r\n    _getUsers(),\r\n    _getTweets(),\r\n  ]).then(([users, tweets]) => ({\r\n    users,\r\n    tweets,\r\n  }));\r\n}\r\n\r\nexport function saveLikeToggle(info) {\r\n  return _saveLikeToggle(info);\r\n}\r\n\r\nexport function saveTweet(info) {\r\n  return _saveTweet(info);\r\n}\r\n","/**\n * @const {string} ADD_TWEET\n */\nexport const ADD_TWEET = 'ADD_TWEET';\n/**\n * @const {string} RECEIVE_TWEETS\n */\nexport const RECEIVE_TWEETS = 'RECEIVE_TWEETS';\n/**\n * @const {string} TOGGLE_TWEETS\n */\nexport const TOGGLE_TWEET = 'TOGGLE_TWEET';\n/**\n * @const {string} RECEIVE_USERS\n */\nexport const RECEIVE_USERS = 'RECEIVE_USERS';\n/**\n * @const {string} SET_AUTHED_USER\n */\nexport const SET_AUTHED_USER = 'SET_AUTHED_USER';\n\n","// Module imports\nimport {hideLoading, showLoading} from 'react-redux-loading';\n\n// Type imports\nimport {ADD_TWEET, RECEIVE_TWEETS, TOGGLE_TWEET} from 'redux/actions/types';\n\n// Util imports\nimport {saveLikeToggle, saveTweet} from 'utils/api';\n\n/**\n * Action creator for received tweets\n * @param {tweets} tweets - Tweets received from fetch\n * @return {action} - Action to dispatch\n */\nexport const receiveTweets = (tweets) => ({type: RECEIVE_TWEETS, tweets});\n\n/**\n * Action creator to like tweet\n * @param {info} info\n * @return {action} - Action to dispatch\n */\nconst toggleTweet = ({id, authedUser, hasLiked}) => ({\n  type: TOGGLE_TWEET,\n  id,\n  authedUser,\n  hasLiked,\n});\n\n/**\n * Handles tweek like\n * @param {info} info - The tweet to like\n * @return {promise}\n */\nexport const handleToggleTweet = (info) => (dispatch) => {\n  dispatch(toggleTweet(info));\n\n  return saveLikeToggle(info).catch((e) => {\n    dispatch(toggleTweet(info));\n    console.warn('Error in handleToggleTweet: ', e);\n    alert('There was an error liking the tweet. Try again');\n  });\n};\n\n/**\n * Action creator to add a tweet\n * @param {tweet} tweet\n * @return {action}\n */\nconst addTweet = (tweet) => ({type: ADD_TWEET, tweet});\n\n/**\n * Handles adding a tweet\n * @param {id} authedUser\n * @param {string} text\n * @param {id} [replyingTo]\n * @return {promise}\n */\nexport const handleAddTweet = (authedUser, text, replyingTo) => (dispatch) => {\n  dispatch(showLoading());\n\n  return saveTweet({text, author: authedUser, replyingTo})\n      .then((tweet) => dispatch(addTweet(tweet)))\n      .then(() => dispatch(hideLoading()))\n      .catch((e) => {\n        console.warn('Error in handleAddTweet: ', e);\n        alert('There was an error adding the tweet. Try again');\n      });\n};\n","export function formatDate(timestamp) {\r\n  const d = new Date(timestamp);\r\n  const time = d.toLocaleTimeString('en-US');\r\n  return time.substr(0, 5) + time.slice(-2) + ' | ' + d.toLocaleDateString();\r\n}\r\n\r\nexport function formatTweet(tweet, author, authedUser, parentTweet) {\r\n  const {id, likes, replies, text, timestamp} = tweet;\r\n  const {name, avatarURL} = author;\r\n\r\n  return {\r\n    name,\r\n    id,\r\n    timestamp,\r\n    text,\r\n    avatar: avatarURL,\r\n    likes: likes.length,\r\n    replies: replies.length,\r\n    hasLiked: likes.includes(authedUser),\r\n    parent: !parentTweet ? null : {\r\n      author: parentTweet.author,\r\n      id: parentTweet.id,\r\n    },\r\n  };\r\n}\r\n","// Util imports\nimport {formatTweet} from 'utils/helpers';\n\n/**\n * Get Laoding status\n * @param {id} authedUser - authedUser from state\n * @return {boolean}\n */\nexport const getLoading = (authedUser) => authedUser === null;\n\n/**\n * Get tweet IDs\n * @param {tweets} tweets - tweets from state\n * @return {id[]} - IDs of tweet\n */\nexport const getTweetIDs = (tweets) =>\n  Object.keys(tweets).sort((a, b) => tweets[b].timestamp - tweets[a].timestamp);\n\n/**\n * Get tweet\n * @param {id} id - ID of a particular tweet\n * @param {tweets} tweets - tweets from state\n * @return {tweet} - tweet\n */\nexport const getTweet = (id, tweets) => tweets[id];\n\n/**\n * Get parent tweet\n * @param {id} id - ID of a particular tweet\n * @param {tweets} tweets - tweets from state\n * @return {tweet} - parent tweet\n */\nexport const getParentTweet = (id, tweets) => {\n  const tweet = getTweet(id, tweets);\n  return tweet && tweets[tweet.replyingTo];\n};\n\n/**\n * Formats single tweet from state\n * @param {id} authedUser - authedUser from state\n * @param {id} id - ID of a particular tweet\n * @param {tweets} tweets - tweets from state\n * @param {users} users - users from state\n * @return {tweet} - formatted tweet\n */\nexport const getFormattedTweet = (authedUser, id, tweets, users) => {\n  const tweet = getTweet(id, tweets);\n\n  return (\n    tweet &&\n    formatTweet(\n        tweet,\n        users[tweet.author],\n        authedUser,\n        getParentTweet(id, tweets),\n    )\n  );\n};\n\n/**\n * Gets tweet replies from state\n * @param {string} id - ID of a particular tweet\n * @param {tweets} tweets - tweets from state\n * @return {id[]} - IDs of tweet replies\n */\nexport const getTweetReplies = (id, tweets) =>\n  tweets[id] &&\n  tweets[id].replies.sort(\n      (a, b) => tweets[b].timestamp - tweets[a].timestamp,\n  );\n","// Module imports\nimport React, {Component} from 'react';\nimport {connect} from 'react-redux';\nimport PropTypes from 'prop-types';\nimport {\n  TiArrowBackOutline,\n  TiHeartOutline,\n  TiHeartFullOutline,\n} from 'react-icons/ti';\nimport {Link, withRouter} from 'react-router-dom';\n\n// Action creator imports\nimport {handleToggleTweet} from 'redux/actions/tweets';\n\n// Util imports\nimport {formatDate} from 'utils/helpers';\n\n// Selector imports\nimport {getFormattedTweet} from 'redux/selectors';\n\n/**\n * Tweet component\n */\nclass Tweet extends Component {\n  /**\n   * Tweet propTypes\n   */\n  static propTypes = {\n    authedUser: PropTypes.string,\n    handleToggleTweet: PropTypes.func,\n    history: PropTypes.object,\n    tweet: PropTypes.object,\n  };\n\n  /**\n   * Handles tweet like\n   * @param {object} e - javascript event object\n   */\n  handleLike = (e) => {\n    e.preventDefault();\n\n    const {authedUser, tweet} = this.props;\n\n    this.props.handleToggleTweet({\n      id: tweet.id,\n      authedUser,\n      hasLiked: tweet.hasLiked,\n    });\n  };\n\n  /**\n   * Redirects to parent tweet\n   * @param {object} e - javascript event object\n   * @param {id} id - parent tweet ID\n   */\n  toParent = (e, id) => {\n    e.preventDefault();\n\n    /**\n     * This is one approach\n     * <Redirect to={`/tweet/${id}`} />;\n     */\n    this.props.history.push(`/tweet/${id}`);\n  };\n\n  /**\n   * Renders the Tweet UI\n   * @return {object} - The UI DOM object\n   */\n  render() {\n    const {tweet} = this.props;\n\n    if (!tweet) return <p>This tweet does not exist</p>;\n\n    const {\n      id,\n      name,\n      avatar,\n      timestamp,\n      text,\n      hasLiked,\n      likes,\n      replies,\n      parent,\n    } = tweet;\n\n    return (\n      <Link to={`/tweet/${id}`} className=\"tweet\">\n        <img src={avatar} alt={`Avatar of ${name}`} className=\"avatar\" />\n        <div className=\"tweet-info\">\n          <div>\n            <span>{name}</span>\n            <div>{formatDate(timestamp)}</div>\n            {parent && (\n              <button\n                className=\"replying-to\"\n                onClick={(e) => this.toParent(e, parent.id)}\n              >\n                Replying to @{parent.author}\n              </button>\n            )}\n            <p>{text}</p>\n          </div>\n          <div className=\"tweet-icons\">\n            <TiArrowBackOutline className=\"tweet-icon\" />{' '}\n            {replies !== 0 && <span>{replies}</span>}\n            <button className=\"heart-button\" onClick={this.handleLike}>\n              {hasLiked ? (\n                <TiHeartFullOutline color=\"#e0245e\" className=\"tweet-icon\" />\n              ) : (\n                <TiHeartOutline className=\"tweet-icon\" />\n              )}\n            </button>\n            {likes !== 0 && <span>{likes}</span>}\n          </div>\n        </div>\n      </Link>\n    );\n  }\n}\n\n/**\n *\n * @param {state} state\n * @param {object} ownProps\n * @param {string} ownProps.id\n * @return {tweetStateProps}\n */\nconst mapStateToProps = ({authedUser, tweets, users}, {id}) => ({\n  authedUser,\n  tweet: getFormattedTweet(authedUser, id, tweets, users),\n});\n\n// Tweet export\nexport default withRouter(\n    connect(mapStateToProps, {handleToggleTweet})(Tweet),\n);\n","// Module imports\nimport React from 'react';\nimport {connect} from 'react-redux';\nimport PropTypes from 'prop-types';\n\n// Component imports\nimport Tweet from 'components/container/Tweet';\n\n// Selector imports\nimport {getTweetIDs} from 'redux/selectors';\n\n/**\n * Dashboard Component\n * @param {dashboardProps} props - Component props\n * @return {object} - The UI DOM object\n */\nconst Dashboard = ({tweetIDs}) => (\n  <div>\n    <h3 className=\"center\">Your Timeline</h3>\n    <ul>\n      {tweetIDs.map((ID) => (\n        <li key={ID}>\n          <Tweet id={ID} />\n        </li>\n      ))}\n    </ul>\n  </div>\n);\n\n/**\n * Dashboard propTypes\n */\nDashboard.propTypes = {\n  tweetIDs: PropTypes.array,\n};\n\n/**\n * Maps state to Dashboard component props\n * @param {state} state - Current state\n * @return {dashboardStateProps}\n */\nconst mapStateToProps = ({tweets}) => ({\n  tweetIDs: getTweetIDs(tweets),\n});\n\n// Dashboard export\nexport default connect(mapStateToProps)(Dashboard);\n","// Module imports\nimport React from 'react';\nimport PropTypes from 'prop-types';\n\n// Component imports\nimport Tweet from 'components/container/Tweet';\n\n/**\n * TweetReplies Component\n * @param {tweetRepliesProps} props - Component props\n * @return {object} - The UI DOM object\n */\nconst TweetReplies = ({replies}) => (\n  <ul>\n    {replies.map((replyID) => (\n      <li key={replyID}>\n        <Tweet id={replyID} />\n      </li>\n    ))}\n  </ul>\n);\n\n/**\n * TweetReplies propTypes\n */\nTweetReplies.propTypes = {\n  replies: PropTypes.array,\n};\n\n// TweetReplies export\nexport default TweetReplies;\n","// Module imports\nimport React, {Component} from 'react';\nimport PropTypes from 'prop-types';\nimport {connect} from 'react-redux';\nimport {Redirect} from 'react-router-dom';\n\n// Action creator imports\nimport {handleAddTweet} from 'redux/actions/tweets';\n\n/**\n * TweetForm component\n */\nclass TweetForm extends Component {\n  /**\n   * TweetForm propTypes\n   */\n  static propTypes = {\n    authedUser: PropTypes.string,\n    handleAddTweet: PropTypes.func,\n    id: PropTypes.string,\n    text: PropTypes.string,\n  };\n\n  /**\n   * TweetForm state\n   */\n  state = {\n    text: '',\n    toHome: false,\n  };\n\n  /**\n   * Handles form input change\n   * @param {object} e - The javascript event object\n   */\n  handleChange = (e) => {\n    e.preventDefault();\n    this.setState(() => ({text: e.target.value}));\n  };\n\n  /**\n   * Handles the form submit\n   * @param {object} e - The javascript event object\n   */\n  handleSubmit = (e) => {\n    e.preventDefault();\n\n    const {authedUser, id} = this.props;\n\n    // id here is the ID of the tweet we are replying to\n    this.props.handleAddTweet(authedUser, this.state.text, id);\n\n    this.setState(() => ({text: '', toHome: id ? false : true}));\n  };\n\n  /**\n   * Changes color of tweetLeft\n   * @param {number} tweetLeft - number of characters left in tweet\n   * @return {string} - tweetLeft color\n   */\n  tweetLeftColor = (tweetLeft) =>\n    tweetLeft >= 181 ? 'green' : tweetLeft >= 51 ? 'blue' : 'red';\n\n  /**\n   * Renders TweetForm UI\n   * @return {object} - The UI DOM object\n   */\n  render = () => {\n    const {text, toHome} = this.state;\n    const tweetLeft = 270 - text.length;\n\n    return toHome ? (\n      <Redirect to=\"/\" />\n    ) : (\n      <div>\n        <h3 className=\"center\"> Compose new tweet</h3>\n        <form className=\"new-tweet\" onSubmit={this.handleSubmit}>\n          <textarea\n            place=\"What's happening?\"\n            value={text}\n            onChange={this.handleChange}\n            className=\"textarea\"\n            maxLength={270}\n          ></textarea>\n          {tweetLeft <= 269 && (\n            <div\n              className=\"tweet-length\"\n              style={{color: this.tweetLeftColor(tweetLeft)}}\n            >\n              {tweetLeft}\n            </div>\n          )}\n          <button className=\"btn\" type=\"submit\" disabled={text === ''}>\n            Submit\n          </button>\n        </form>\n      </div>\n    );\n  };\n}\n\n/**\n * Maps state to TweetForm component props\n * @param {state} state\n * @return {tweetFormStateProps}\n */\nconst mapStateToProps = ({authedUser}) => ({authedUser});\n\n// TweetForm export\nexport default connect(mapStateToProps, {handleAddTweet})(TweetForm);\n","// Module imports\nimport React from 'react';\nimport {connect} from 'react-redux';\nimport PropTypes from 'prop-types';\n\n// Component imports\nimport TweetReplies from 'components/presentation/TweetReplies';\nimport Tweet from 'components/container/Tweet';\nimport TweetForm from 'components/container/TweetForm';\nimport {getTweetReplies} from 'redux/selectors';\n\n/**\n * TweetPage component\n * @param {tweetPageProps} props - Component props\n * @return {object} - The UI DOM object\n */\nconst TweetPage = ({id, replies}) => (\n  <div>\n    <Tweet id={id} />\n    <TweetForm id={id} />\n    {replies && <TweetReplies replies={replies} />}\n  </div>\n);\n\n/**\n * TweetPage propTypes\n */\nTweetPage.propTypes = {\n  id: PropTypes.string,\n  replies: PropTypes.array,\n};\n\n/**\n * Maps state to TweetPage component props\n * @param {state} state\n * @param {object} ownProps\n * @params {match} ownProps.match\n * @return {tweetPageStateProps}\n */\nconst mapStateToProps = ({tweets}, {match}) => ({\n  id: match.params.id,\n  replies: getTweetReplies(match.params.id, tweets),\n});\n\n// TweetPage export\nexport default connect(mapStateToProps)(TweetPage);\n","// Module imports\nimport React from 'react';\nimport {NavLink} from 'react-router-dom';\n\n/**\n * Nav component\n * @return {object} - The UI DOM object\n */\nexport default function Nav() {\n  return (\n    <nav className=\"nav\">\n      <ul>\n        <li>\n          <NavLink to=\"/\" exact activeClassName=\"active\">\n            Home\n          </NavLink>\n        </li>\n        <li>\n          <NavLink to=\"/new\" activeClassName=\"active\">\n            New Tweet\n          </NavLink>\n        </li>\n      </ul>\n    </nav>\n  );\n}\n","// Module imports\nimport React, {Component} from 'react';\nimport {connect} from 'react-redux';\nimport PropTypes from 'prop-types';\nimport LoadingBar from 'react-redux-loading';\nimport {BrowserRouter as Router, Route} from 'react-router-dom';\n\n// Action creator imports\nimport {handleInitialData} from 'redux/actions/shared';\n\n// Selector imports\nimport {getLoading} from 'redux/selectors';\nimport Dashboard from './Dashboard';\nimport TweetPage from './TweetPage';\nimport TweetForm from './TweetForm';\nimport Nav from 'components/presentation/Nav';\n\n/**\n * App component\n */\nclass App extends Component {\n  /**\n   * App propTypes\n   */\n  static propTypes = {\n    handleInitialData: PropTypes.func,\n    loading: PropTypes.bool,\n  };\n\n  /**\n   * Executes once component mounts\n   * @return {actionCreator}\n   */\n  componentDidMount = () => this.props.handleInitialData();\n\n  /**\n   * Renders the App UI\n   * @return {object} The UI DOM object\n   */\n  render = () => (\n    <Router basename=\"/\">\n      <>\n        <LoadingBar />\n        <div className=\"container\">\n          <Nav />\n          {!this.props.loading && (\n            <div>\n              <Route path=\"/\" exact component={Dashboard} />\n              <Route path=\"/tweet/:id\" component={TweetPage} />\n              <Route path=\"/new\" component={TweetForm} />\n            </div>\n          )}\n        </div>\n      </>\n    </Router>\n  );\n}\n\n/**\n * Maps state to Dashboard component props\n * @param {state} state\n * @return {appStateProps}\n */\nconst mapStateToProps = ({authedUser}) => ({\n  loading: getLoading(authedUser),\n});\n\n// App export\nexport default connect(mapStateToProps, {handleInitialData})(App);\n","// API import\nimport {getInitialData} from 'utils/api';\nimport {hideLoading, showLoading} from 'react-redux-loading';\n\n// Action creator imports\nimport {receiveTweets} from 'redux/actions/tweets';\nimport {receiveUsers} from 'redux/actions/users';\nimport {setAuthedUser} from 'redux/actions/authedUser';\n\n/**\n * @const {string}\n */\nconst AUTHED_ID = 'tylermcginnis';\n\n/**\n * Async action creator to handle initial data\n * @return {actionCreator}\n */\nexport const handleInitialData = () => (dispatch) => {\n  dispatch(showLoading());\n  return getInitialData().then(({tweets, users}) => {\n    dispatch(receiveTweets(tweets));\n    dispatch(receiveUsers(users));\n    dispatch(setAuthedUser(AUTHED_ID));\n    dispatch(hideLoading());\n  });\n};\n","// Type imports\nimport {RECEIVE_USERS} from 'redux/actions/types';\n\n/**\n * Action creator for received users\n * @param {users} users - Users received from fetch\n * @return {action} - Action to dispatch\n */\nexport const receiveUsers = (users) => ({type: RECEIVE_USERS, users});\n","// Type imports\nimport {SET_AUTHED_USER} from 'redux/actions/types';\n\n/**\n * Action creator to set authed user\n * @param {id} id - The ID of the authedUser\n * @return {action} - The action to dispatch\n */\nexport const setAuthedUser = (id) => ({type: SET_AUTHED_USER, id});\n","const reportWebVitals = (onPerfEntry) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({getCLS, getFID, getFCP, getLCP, getTTFB}) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","// Module imports\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport {Provider} from 'react-redux';\n\n// Store import\nimport store from 'redux/store';\n\n// Style imports\nimport 'index.css';\n\n// Component imports\nimport App from 'components/container/App';\nimport reportWebVitals from 'reportWebVitals';\n\nReactDOM.render(\n    <Provider store={store}>\n      <App />\n    </Provider>,\n    document.getElementById('root'),\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}